name: GitHub to GitHub

on:
  workflow_dispatch:
#   schedule:
#     - cron: "0 2 * * 3"

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login Source GitHub
        run: |
          gh --version
          echo "${{ secrets.SRC_GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: List repos
        id: list_repos
        run: |
          repo_list=$(gh repo list -L 1000 --json name -t '{{range $i, $n := .}}{{if (gt $i 0)}},{{end}}{{$n.name}}{{end}}')
          echo "::set-output name=repo_list::${repo_list}"

      - name: GitHub to GitHub
        uses: k8scat/action-mirror-git@v0.1.3
        with:
          source_protocol: https
          source_host: github.com
          source_username: yin2na
          source_token: ${{ secrets.SRC_GITHUB_TOKEN }}
          dest_protocol: https
          dest_host: github.com
          dest_username: purepoorx
          dest_token: ${{ secrets.DEST_TOKEN_GITHUB }}
          dest_token_username: gitobor
          mirror_repos: ${{ steps.list_repos.outputs.repo_list }}
          dest_create_repo_script: |
            if ! gh auth status; then
              echo "${INPUT_DEST_TOKEN}" | gh auth login --with-token
              gh auth status
            fi

            found=$(gh repo list ${INPUT_DEST_USERNAME} -L 1000 --json name -t "{{range .}}{{if (eq .name \"${REPO_NAME}\")}}{{.name}}{{end}}{{end}}")
            if [[ -n "${found}" ]]; then
              echo "Repo already exists: ${REPO_NAME}"
              exit 0
            fi
            gh repo create "${INPUT_DEST_USERNAME}/${REPO_NAME}" --private
          lark_webhook: ${{ secrets.LARK_WEBHOOK }}
          notify_prefix: "GitHub to GitHub"
          ignore_error: "true"
